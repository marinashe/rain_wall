{"version":3,"sources":["assets/clouds.png","config/constants.js","components/grass/grass_block.js","components/grass/grass.js","actions/drag.js","components/grass/index.js","components/wall/wall_block.js","components/wall/water_block.js","components/wall/wall.js","components/wall/index.js","components/cloud/cloud.js","components/cloud/index.js","actions/rain.js","components/textual_wall/textual_wall.js","actions/wall.js","components/textual_wall/index.js","components/app/no_animation.js","components/app/app.js","components/app/index.js","actions/grass.js","config/createReducer.js","reducers/wall.js","config/utils.js","reducers/drag.js","reducers/rain.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","Constants","BLOCK_SIZE","MAX_WALL_LENGTH","MIN_WALL_LENGTH","MAX_WALL_HEIGHT","Wall","CREATE_WALL","ADD_WALL_BLOCKS","CALCULATE_VOLUME_WATER","Grass","ADD_GRASS_BLOCK","Drag","SET_DRAG_MODE","UNSET_DRAG_MODE","Rain","START_RAIN","STOP_RAIN","ADD_NEXT_LEVEL","Animation","SET_NO_ANIMATION_MODE","UNSET_NO_ANIMATION_MODE","GrassBlock","grassStyle","index","onMouseDown","className","style","e","grassRef","React","createRef","getCenterOfGrass","current","getBoundingClientRect","left","width","columnIndex","props","setDragMode","rainMode","preventDefault","coordinates","x","pageX","y","pageY","renderGrassBlock","nothing","blockSize","height","key","this","grass","additionalBlocks","countBlocks","styleGrass","cursor","ref","Array","from","map","PureComponent","direction","type","connect","wall","rain","WallBlock","blockStyle","WaterBlock","id","d","fill","renderWallColumn","blockCount","raisedColumnIndex","additionalWallBlocks","water","nextLevel","waterBlocks","newBlockCount","borderTop","waterBlockIndex","blockIndex","additionalWallLength","newWall","concat","newLength","length","Math","abs","slice","drag","INTERVAL","Cloud","addLevel","addNextLevel","newWater","waterColumn","newNextLevel","i","wallHeight","isFall","right","toggleRain","startRain","stopRain","clearInterval","animation","setInterval","onClick","src","cloud","alt","TextualWall","setNoChanges","setState","wasChanges","setVolumeWater","volumeWater","handleChange","setNewInputValue","target","value","parseInput","inputValue","state","error","array","split","trim","isNaN","Number","isInteger","handleSubmit","createWall","setNoAnimationMode","max","join","prevProps","prevState","calculateVolumeWater","noAnimationMode","isButtonDisabled","buttonClassName","onSubmit","name","onChange","readOnly","disabled","NoAnimation","unsetNoAnimationMode","difference","a","b","App","additionalGrassBlocks","getMovingAxis","startCoordinates","setNewGrassBlocks","count","setNewWallBlocks","onMouseMove","dragMode","startX","startY","movingAxis","round","onMouseUp","unsetDragMode","addGrassBlocks","addWallBlocks","onMouseLeave","mainStyle","backgroundColor","createReducer","initialState","handlers","action","hasOwnProperty","fillArray","getDefaultState","calculatedWall","leftMax","rightMax","reverse","volume","min","createStore","combineReducers","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00198cb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clouds.4a119168.png\";","const Constants = {\n  BLOCK_SIZE: 30,\n  MAX_WALL_LENGTH: 23,\n  MIN_WALL_LENGTH: 3,\n  MAX_WALL_HEIGHT: 14,\n  Wall: {\n    CREATE_WALL: 'create:new:wall',\n    ADD_WALL_BLOCKS: 'add:wall:blocks',\n    CALCULATE_VOLUME_WATER: 'calculate:volume:water'\n  },\n  Grass: {\n    ADD_GRASS_BLOCK: 'add:grass:block'\n  },\n  Drag: {\n    SET_DRAG_MODE: 'set:drag:mode',\n    UNSET_DRAG_MODE: 'unset:drag:mode'\n  },\n  Rain: {\n    START_RAIN: 'start:rain',\n    STOP_RAIN: 'stop:rain',\n    ADD_NEXT_LEVEL: 'add:next:level'\n  },\n  Animation: {\n    SET_NO_ANIMATION_MODE: 'set:no:animation:mode',\n    UNSET_NO_ANIMATION_MODE: 'unset:no:animation:mode'\n  }\n};\n\nexport default Constants;\n","import React from 'react';\nimport T from 'prop-types';\nimport './styles.css';\n\nexport const GrassBlock = ({ grassStyle, index, onMouseDown }) => {\n  const handleMouseDown = (e) => {\n    onMouseDown(e, index);\n  }\n\n  return (\n    <div className=\"grass-block\" style={ grassStyle } onMouseDown={ handleMouseDown }/>\n  );\n};\n\nGrassBlock.propTypes = {\n  grassStyle: T.shape({\n    width: T.number.isRequired,\n    height: T.number.isRequired\n  }).isRequired,\n  index: T.number.isRequired,\n  onMouseDown: T.func.isRequired\n};\n\nexport default GrassBlock;\n","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport GrassBlock from './grass_block';\nimport './styles.css';\n\nclass Grass extends PureComponent {\n  static propTypes = {\n    grass: T.number.isRequired,\n    blockSize: T.number.isRequired,\n    setDragMode: T.func.isRequired,\n    additionalBlocks: T.number.isRequired,\n    rainMode: T.bool.isRequired\n  }\n  grassRef = React.createRef()\n\n  getCenterOfGrass = () => {\n    const { left, width } = this.grassRef.current.getBoundingClientRect();\n    return left + width / 2;\n  }\n\n  onMouseDown = (e, columnIndex) => {\n    const { setDragMode, rainMode } = this.props;\n    if (rainMode) {\n      return;\n    }\n    e.preventDefault();\n    const coordinates = { x: e.pageX, y: e.pageY };\n    const direction = coordinates.x > this.getCenterOfGrass() ? 1 : -1;\n    // 1 - to right, -1 - to left\n    setDragMode(coordinates, direction, columnIndex);\n  }\n\n  renderGrassBlock = (nothing, index) => {\n    const { blockSize } = this.props;\n    const grassStyle = {\n      width: blockSize,\n      height: blockSize\n    }\n    return (\n      <GrassBlock key={ index } index={ index } grassStyle={ grassStyle } onMouseDown={ this.onMouseDown } />\n    );\n  }\n\n  render() {\n    const { grass, additionalBlocks } = this.props;\n    const countBlocks = grass + additionalBlocks;\n    const styleGrass = additionalBlocks > 0\n      ? {\n        cursor: 'ew-resize'\n      }\n      : {};\n    return (\n      <div ref={ this.grassRef } className=\"grass-container\" style={ styleGrass }>\n        {\n          Array.from(Array(countBlocks)).map(this.renderGrassBlock)\n        }\n      </div>\n    );\n  }\n}\n\nexport default Grass;\n","import Constants from '../config/constants';\n\nexport const setDragMode = (coordinates, direction, columnIndex) => ({\n  type: Constants.Drag.SET_DRAG_MODE,\n  coordinates,\n  direction,\n  columnIndex\n});\n\nexport const unsetDragMode = () => ({\n  type: Constants.Drag.UNSET_DRAG_MODE\n});\n","import { connect } from 'react-redux';\nimport Grass from './grass';\nimport { setDragMode } from '../../actions/drag';\n\nconst mapStateToProps = ({ wall, rain }) => ({\n  grass: wall.grass,\n  blockSize: wall.blockSize,\n  rainMode: rain.rainMode\n});\n\nexport default connect(mapStateToProps, { setDragMode })(Grass);\n","import React from 'react';\nimport T from 'prop-types';\nimport './styles.css';\n\nexport const WallBlock = ({ blockStyle, columnIndex, onMouseDown }) => {\n  const handleMouseDown = (e) => {\n    onMouseDown(e, columnIndex);\n  }\n  return (\n    <div className=\"wall-block\" style={ blockStyle } onMouseDown={ handleMouseDown } />\n  );\n};\n\nWallBlock.propTypes = {\n  blockStyle: T.shape({\n    width: T.number.isRequired,\n    height: T.number.isRequired\n  }).isRequired,\n  columnIndex: T.number.isRequired,\n  onMouseDown: T.func.isRequired\n};\n\nexport default WallBlock;\n","import React from 'react';\nimport T from 'prop-types';\nimport './styles.css';\n\nexport const WaterBlock = ({ blockStyle }) => {\n  return (\n    <div className=\"water-block\" style={ blockStyle }>\n      <div className=\"fill\">\n        <svg>\n          <path\n            id=\"waveShape\"\n            d=\"M 60.059343,78.359519 V 0.75034655 c 0,0 -0.120119,-0.026086 -0.220217,-0.026086 0,0 -5.105044,-0.60000334 -8.108011,-0.62609128 -3.002968,0 -8.128032,0.62609128 -8.128032,0.62609128 C 41.14065,1.0112204 37.53709,1.1938291 37.216774,1.219917 36.816378,1.1938314 33.272877,1.0112204 30.810443,0.72426085 c 0,0 -5.165103,-0.60000334 -8.168071,-0.62609013 -3.002967,0 -8.16807,0.62609013 -8.16807,0.62609013 C 12.011869,1.0112204 8.388288,1.1938302 8.0679717,1.219917 7.6675761,1.1938314 4.0640155,1.0112204 1.6216022,0.72426205 c 0,0 -0.6206131,-0.078257 -1.621602235344366,-0.18261002 V 78.359521 Z\"\n            fill=\"#04acff\"\n           />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nWaterBlock.propTypes = {\n  blockStyle: T.shape({\n    width: T.number.isRequired,\n    height: T.number.isRequired\n  }).isRequired\n};\n\nexport default WaterBlock;\n","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport WallBlock from './wall_block';\nimport WaterBlock from './water_block';\nimport './styles.css';\n\nclass Wall extends PureComponent {\n  static propTypes = {\n    wall: T.arrayOf(T.number).isRequired,\n    blockSize: T.number.isRequired,\n    nextLevel: T.arrayOf(T.number).isRequired,\n    water: T.arrayOf(T.number).isRequired,\n    additionalWallLength: T.number.isRequired,\n    additionalWallBlocks: T.number.isRequired,\n    columnIndex: T.number.isRequired,\n    setDragMode: T.func.isRequired,\n    rainMode: T.bool.isRequired\n  }\n\n  onMouseDown = (e, columnIndex) => {\n    const { setDragMode, rainMode } = this.props;\n    if (rainMode) {\n      return;\n    }\n    e.preventDefault();\n    const coordinates = { x: e.pageX, y: e.pageY };\n    setDragMode(coordinates, 1, columnIndex);\n  }\n\n  renderWallColumn = (blockCount, columnIndex) => {\n    const {\n      blockSize,\n      columnIndex: raisedColumnIndex,\n      additionalWallBlocks,\n      water,\n      nextLevel,\n    } = this.props;\n    const blockStyle = {\n      width: blockSize,\n      height: blockSize\n    }\n\n    const waterBlocks = (water[columnIndex] || 0)  + (nextLevel[columnIndex] || 0);\n    const newBlockCount = columnIndex === raisedColumnIndex\n    ? blockCount + additionalWallBlocks\n    : blockCount;\n\n    if ((newBlockCount + waterBlocks) === 0) {\n      blockStyle.height = 0;\n      blockStyle.borderTop = 0;\n      return (\n        <WallBlock\n          key={ `wallBlock${ columnIndex }-#` }\n          columnIndex={ columnIndex }\n          blockStyle={ blockStyle }\n          onMouseDown={ this.onMouseDown }\n        />\n      );\n    }\n    return (\n      <div className=\"wall-column\" key={ `column${ columnIndex }` }>\n        <div className=\"water-column\">\n          {\n            Array.from(Array(waterBlocks)).map((nothing, waterBlockIndex) => {\n              return (\n                <WaterBlock\n                  key={ `waterBlock${ columnIndex }-${ waterBlockIndex }` }\n                  blockStyle={ blockStyle }\n                />\n              )\n            })\n          }\n        </div>\n\n        {\n          Array.from(Array(newBlockCount)).map((nothing, blockIndex) => {\n            return (\n              <WallBlock\n                key={ `wallBlock${ columnIndex }-${ blockIndex }` }\n                columnIndex={ columnIndex }\n                blockStyle={ blockStyle }\n                onMouseDown={ this.onMouseDown }\n              />\n            )\n          })\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const { wall, additionalWallLength } = this.props;\n    let newWall = [...wall];\n    if (additionalWallLength > 0) {\n      newWall = wall.concat(Array(additionalWallLength).fill(0));\n    }\n\n    if (additionalWallLength < 0) {\n      const newLength = wall.length - Math.abs(additionalWallLength);\n      newWall = wall.slice(0, Math.abs(newLength));\n    }\n    return (\n      <div ref={ this.grassRef } className=\"wall-container\">\n        {\n          newWall.map(this.renderWallColumn)\n        }\n      </div>\n    );\n  }\n}\n\nexport default Wall;\n","import { connect } from 'react-redux';\nimport Wall from './wall';\nimport { setDragMode } from '../../actions/drag';\n\nconst mapStateToProps = ({ wall, drag, rain }) => ({\n  wall: wall.wall,\n  blockSize: wall.blockSize,\n  water: wall.water,\n  nextLevel: wall.nextLevel,\n  columnIndex: drag.columnIndex,\n  rainMode: rain.rainMode\n});\n\nexport default connect(mapStateToProps, { setDragMode })(Wall);\n","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport cloud  from '../../assets/clouds.png';\nimport './styles.css';\n\nconst INTERVAL = 1000;\n\nclass Cloud extends PureComponent {\n  static propTypes = {\n    wall: T.arrayOf(T.number).isRequired,\n    water: T.arrayOf(T.number).isRequired,\n    nextLevel: T.arrayOf(T.number).isRequired,\n    startRain: T.func.isRequired,\n    stopRain: T.func.isRequired,\n    rainMode: T.bool.isRequired,\n    addNextLevel: T.func.isRequired\n  }\n\n  componentWillUnmount() {\n    if (this.animation) {\n      clearInterval(this.animation);\n      this.animation = null;\n    }\n  }\n\n  addLevel = () => {\n    const { wall, water, nextLevel, addNextLevel } = this.props;\n    const newWater = water.map((waterColumn, index) => waterColumn + nextLevel[index]);\n\n    const newNextLevel = Array(wall.length).fill(0);\n\n    for (let i = 1; i < wall.length - 1; i++) {\n      const wallHeight = wall[i] + newWater[i];\n      let isFall = false;\n      for (let left = i - 1; left >= 0; left--) {\n        if (wall[left] + newWater[left] > wallHeight) {\n          break;\n        }\n\n        if (wall[left] + newWater[left] < wallHeight || left === 0) {\n          isFall = true;\n          break;\n        }\n      }\n      if (isFall) {\n        continue;\n      }\n      for (let right = i + 1; right < wall.length; right++) {\n        if (wall[right] + newWater[right] > wallHeight) {\n          break;\n        }\n\n        if (wall[right] + newWater[right] < wallHeight || right === wall.length - 1) {\n          isFall = true;\n          break;\n        }\n      }\n      if (isFall) {\n        continue;\n      }\n      newNextLevel[i] = 1;\n    }\n    addNextLevel(newWater, newNextLevel);\n  }\n\n  toggleRain = () => {\n    const { startRain, stopRain, rainMode } = this.props;\n    if (rainMode) {\n      stopRain();\n      clearInterval(this.animation);\n      this.animation = null;\n    } else {\n      startRain();\n      this.addLevel();\n      this.animation = setInterval(this.addLevel, INTERVAL)\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className=\"clouds-container\"\n        onClick={ this.toggleRain }\n      >\n        <img  src={ cloud } className=\"clouds\" alt=\"clouds\"/>\n      </div>\n    );\n  }\n}\n\nexport default Cloud;\n","import { connect } from 'react-redux';\nimport Cloud from './cloud';\nimport { startRain, stopRain, addNextLevel } from '../../actions/rain';\n\nconst mapStateToProps = ({ wall, rain }) => ({\n  water: wall.water,\n  nextLevel: wall.nextLevel,\n  wall: wall.wall,\n  rainMode: rain.rainMode\n});\n\nexport default connect(mapStateToProps,\n  { startRain, stopRain, addNextLevel }\n)(Cloud);\n","import Constants from '../config/constants';\n\nexport const startRain = () => ({\n  type: Constants.Rain.START_RAIN\n});\n\nexport const stopRain = () => ({\n  type: Constants.Rain.STOP_RAIN\n});\n\nexport const addNextLevel = (water, nextLevel) => ({\n  type: Constants.Rain.ADD_NEXT_LEVEL,\n  water,\n  nextLevel\n});\n\nexport const setNoAnimationMode = (wall) => ({\n  type: Constants.Animation.SET_NO_ANIMATION_MODE,\n  wall\n});\n\nexport const unsetNoAnimationMode = () => ({\n  type: Constants.Animation.UNSET_NO_ANIMATION_MODE\n});\n","\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport Constants from '../../config/constants';\nimport './styles.css';\n\nconst INSTRUCTIONS = `Drag the grass and bricks to build the wall.Click the cloud to start/stop the rain.`;\n\nclass TextualWall extends PureComponent {\n  static propTypes = {\n    wall: T.arrayOf(T.number).isRequired,\n    rainMode: T.bool.isRequired,\n    createWall: T.func.isRequired,\n    noAnimationMode: T.bool.isRequired,\n    setNoAnimationMode: T.func.isRequired,\n    calculateVolumeWater: T.func.isRequired,\n    volumeWater: T.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: props.wall.join(','),\n      error: null,\n      wasChanges: false\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { calculateVolumeWater, wall, rainMode } = this.props;\n    if (prevProps.wall !== wall) {\n      this.setNewInputValue(wall.join(','));\n      this.setNoChanges();\n    }\n\n    if (!prevProps.rainMode && rainMode) {\n      this.setVolumeWater(calculateVolumeWater(wall));\n    }\n  }\n\n  setNoChanges =() => {\n    this.setState({ wasChanges: false });\n  }\n\n  setVolumeWater = (volumeWater) => {\n    this.setState({ volumeWater })\n  }\n\n  handleChange = (e) => {\n    this.setNewInputValue(e.target.value);\n    this.setState({ wasChanges: true });\n  }\n\n  parseInput = () => {\n    const { inputValue } = this.state;\n    let error = null;\n    const array = inputValue.split(\",\").map(\n      (value) => {\n        if (value.trim() !== '' && !isNaN(Number(value))) {\n          value = Number(value);\n          if (!Number.isInteger(value)) {\n            error = 'Wall format is incorrect. All numbers should be integers.';\n            return null;\n          }\n          return value;\n        }\n        error = 'Wall format is incorrect (should be [1,4,6]).'\n        return null;\n      }\n    );\n    return { array, error };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { createWall ,setNoAnimationMode }  = this.props;\n    const { array, error } = this.parseInput();\n    if (error) {\n      this.setState({ error });\n      return;\n    }\n\n    if (array.length > Constants.MAX_WALL_LENGTH) {\n      // this.setState({ error: `Wall is too long. Max wall length = ${ Constants.MAX_WALL_LENGTH }` });\n      setNoAnimationMode(array)\n      return;\n    }\n\n    if (Math.max(...array) > Constants.MAX_WALL_HEIGHT) {\n      // this.setState({ error: `Wall is too high. Max wall height = ${ Constants.MAX_WALL_HEIGHT }` });\n      setNoAnimationMode(array)\n      return;\n    }\n\n    createWall(array);\n    this.setNoChanges();\n  }\n\n  setNewInputValue = (inputValue) => {\n    this.setState({inputValue, error: null });\n  }\n\n\n  render() {\n    const { inputValue, error, wasChanges } = this.state;\n    const { rainMode, noAnimationMode, volumeWater } = this.props;\n    const isButtonDisabled = noAnimationMode || rainMode || !wasChanges;\n    const buttonClassName = isButtonDisabled ? 'textual-wall-disabled-button' : 'textual-wall-button';\n    return (\n      <div\n        className=\"textual-wall-container\"\n      >\n        <div className=\"textual-wall-instruction\">{ INSTRUCTIONS }</div>\n        <div className=\"textual-wall-label\">\n          Water volume: { volumeWater  }\n        </div>\n        <form className=\"textual-wall-form\" onSubmit={ this.handleSubmit }>\n          <label className=\"textual-wall-label\">\n            Textual Wall:\n            <input\n              type=\"text\"\n              name=\"Textual Wall\"\n              className=\"textual-wall-input\"\n              value={ inputValue }\n              onChange={ this.handleChange }\n              readOnly={ rainMode || noAnimationMode }\n            />\n          </label>\n          <input type=\"submit\" value=\"Build Wall\" className={ buttonClassName } disabled={ isButtonDisabled } />\n        </form>\n        <div className=\"textual-wall-error\">\n          { error || '' }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextualWall;\n","import Constants from '../config/constants';\n\nexport const addWallBlocks = (count, columnIndex) => ({\n  type: Constants.Wall.ADD_WALL_BLOCKS,\n  count,\n  columnIndex\n});\n\nexport const createWall = (wall) => ({\n  type: Constants.Wall.CREATE_WALL,\n  wall\n});\n\n\nexport const calculateVolumeWater = () => ({\n  type: Constants.Wall.CALCULATE_VOLUME_WATER\n});\n","import { connect } from 'react-redux';\nimport TextualWall from './textual_wall';\nimport { createWall, calculateVolumeWater } from '../../actions/wall';\nimport { setNoAnimationMode } from '../../actions/rain';\n\nconst mapStateToProps = ({ wall, rain }) => ({\n  wall: wall.wall,\n  rainMode: rain.rainMode,\n  noAnimationMode: rain.noAnimationMode,\n  volumeWater: wall.volumeWater\n});\n\nexport default connect(mapStateToProps,\n  { createWall, setNoAnimationMode, calculateVolumeWater }\n)(TextualWall);\n","import React from 'react';\nimport T from 'prop-types';\nimport './styles.css';\n\nconst TEXT = 'The requested wall is too complex to draw. But you can still calculate it.';\n\nexport const NoAnimation = ({ noAnimationMode, unsetNoAnimationMode, calculateVolumeWater }) => {\n  if (!noAnimationMode) {\n    return null;\n  }\n  return (\n    <div className=\"app-no-animation\">\n      <div className=\"app-no-animation-text\">\n        { TEXT }\n      </div>\n      <div>\n        <button onClick={ unsetNoAnimationMode } className=\"app-button-reset\">RESET</button>\n        <button onClick={ calculateVolumeWater } className=\"app-button\">CALCULATE</button>\n      </div>\n    </div>\n  );\n};\n\nNoAnimation.propTypes = {\n  noAnimationMode: T.bool.isRequired,\n  unsetNoAnimationMode: T.func.isRequired,\n  calculateVolumeWater: T.func.isRequired\n};\n\nexport default NoAnimation;\n","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport Constants from '../../config/constants';\nimport ConnectedGrass from '../grass';\nimport ConnectedWall from '../wall';\nimport ConnectedCloud from '../cloud';\nimport TextualWall from '../textual_wall';\nimport NoAnimation from './no_animation';\n\nimport './styles.css';\n\nconst difference = (a, b) => Math.abs(a - b);\n\nclass App extends PureComponent {\n  static propTypes = {\n    dragMode: T.bool.isRequired,\n    startCoordinates: T.shape({\n      x: T.number,\n      y: T.number\n    }),\n    unsetDragMode: T.func.isRequired,\n    addGrassBlocks: T.func.isRequired,\n    blockSize: T.number.isRequired,\n    grass: T.number.isRequired,\n    direction: T.number,\n    columnIndex: T.number,\n    wall: T.arrayOf(T.number).isRequired,\n    addWallBlocks: T.func.isRequired,\n    rainMode: T.bool.isRequired,\n    noAnimationMode: T.bool.isRequired,\n    unsetNoAnimationMode: T.func.isRequired,\n    calculateVolumeWater: T.func.isRequired\n  }\n\n  state = {\n    additionalGrassBlocks: 0,\n    additionalWallBlocks: 0\n  }\n\n  getMovingAxis = (current) => {\n    const { startCoordinates }  = this.props;\n    const diffX = difference(startCoordinates.x, current.x);\n    const diffY = difference(startCoordinates.y, current.y);\n    if (diffX >= diffY) {\n      return 'X';\n    }\n    return 'Y';\n  }\n\n\n  setNewGrassBlocks = (count) => {\n    const { grass } = this.props;\n    if (grass + count >= Constants.MIN_WALL_LENGTH && grass + count<= Constants.MAX_WALL_LENGTH) {\n      this.setState({ additionalGrassBlocks: count });\n    }\n  }\n\n  setNewWallBlocks = (count) => {\n    const { wall, columnIndex } = this.props;\n    if (wall[columnIndex] + count >= 0 && wall[columnIndex] + count <= Constants.MAX_WALL_HEIGHT) {\n      this.setState({ additionalWallBlocks: count });\n    }\n  }\n\n  onMouseMove = (e) => {\n    const { dragMode } = this.props;\n\n    if (!dragMode) {\n      return;\n    }\n\n    e.preventDefault();\n    const {\n      startCoordinates: { x: startX, y: startY },\n      blockSize,\n      direction\n    } = this.props;\n    const current = { x: e.pageX, y: e.pageY };\n    const movingAxis = this.getMovingAxis(current);\n    if (movingAxis === 'X') {\n      const additionalBlocks = Math.round(2 * direction * (current.x - startX) / blockSize);\n      this.setNewGrassBlocks(additionalBlocks);\n      this.setNewWallBlocks(0);\n    }\n\n    if (movingAxis === 'Y') {\n      const additionalBlocks = Math.round((startY - current.y) / blockSize);\n      this.setNewWallBlocks(additionalBlocks);\n      this.setNewGrassBlocks(0);\n    }\n  }\n\n  onMouseUp = (e) => {\n    const { dragMode, unsetDragMode, columnIndex } = this.props;\n    if (!dragMode) {\n      return;\n    }\n\n    e.preventDefault();\n    const { addGrassBlocks, addWallBlocks } = this.props;\n    const { additionalGrassBlocks, additionalWallBlocks }  = this.state;\n    unsetDragMode();\n    if (additionalGrassBlocks) {\n      addGrassBlocks(additionalGrassBlocks);\n    }\n    if (additionalWallBlocks) {\n      addWallBlocks(additionalWallBlocks, columnIndex);\n    }\n    this.setNewGrassBlocks(0);\n    this.setNewWallBlocks(0);\n  }\n\n  onMouseLeave = (e) => {\n    const { dragMode, unsetDragMode } = this.props;\n    if (!dragMode) {\n      return;\n    }\n    unsetDragMode();\n    this.setNewGrassBlocks(0);\n    this.setNewWallBlocks(0);\n  }\n\n  render() {\n    const {\n      rainMode,\n      noAnimationMode,\n      unsetNoAnimationMode,\n      calculateVolumeWater\n    } = this.props;\n    const {\n      additionalGrassBlocks,\n      additionalWallBlocks\n    } = this.state;\n\n    let cursor = 'auto';\n    if (additionalWallBlocks > 0 ) {\n      cursor = 'ns-resize';\n    }\n    if (additionalGrassBlocks > 0 ) {\n      cursor = 'ew-resize';\n    }\n\n    const mainStyle = {\n      backgroundColor: rainMode ? 'lightblue' : 'white',\n      cursor\n    }\n\n    return (\n      <div\n        className=\"app-container\"\n        onMouseMove={ this.onMouseMove }\n        onMouseUp={ this.onMouseUp }\n        onMouseLeave={ this.onMouseLeave }\n      >\n        <div\n          className=\"app-main\"\n          style={ mainStyle }\n        >\n          <ConnectedCloud />\n          <div className=\"app-wall\" >\n            <ConnectedWall\n              additionalWallLength={ additionalGrassBlocks }\n              additionalWallBlocks={ additionalWallBlocks }\n            />\n            <ConnectedGrass\n              additionalBlocks={ additionalGrassBlocks }\n            />\n          </div>\n          <NoAnimation\n            noAnimationMode={ noAnimationMode }\n            unsetNoAnimationMode={ unsetNoAnimationMode }\n            calculateVolumeWater={ calculateVolumeWater }\n          />\n        </div>\n        <TextualWall />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './app';\nimport { unsetDragMode } from '../../actions/drag';\nimport { addGrassBlocks } from '../../actions/grass';\nimport { addWallBlocks, calculateVolumeWater } from '../../actions/wall';\nimport { unsetNoAnimationMode } from '../../actions/rain';\n\nconst mapStateToProps = ({ wall, drag, rain }) => ({\n  dragMode: drag.dragMode,\n  startCoordinates: drag.startCoordinates,\n  blockSize: wall.blockSize,\n  grass: wall.grass,\n  direction: drag.direction,\n  columnIndex: drag.columnIndex,\n  wall: wall.wall,\n  rainMode: rain.rainMode,\n  noAnimationMode: rain.noAnimationMode\n});\n\n\nexport default connect(mapStateToProps,\n  { unsetDragMode, addGrassBlocks, addWallBlocks, unsetNoAnimationMode, calculateVolumeWater }\n)(App);\n","import Constants from '../config/constants';\n\nexport const addGrassBlocks = (count) => ({\n  type: Constants.Grass.ADD_GRASS_BLOCK,\n  count\n});\n","const createReducer = (initialState, handlers) => (state = initialState, action) => {\n  if (handlers.hasOwnProperty(action.type)) {\n    return handlers[action.type](state, action);\n  }\n\n  return state;\n};\n\nexport default createReducer;\n","import createReducer from '../config/createReducer';\nimport Constants from '../config/constants';\nimport { calculateVolumeWater } from '../config/utils';\n\nconst fillArray = (count) => Array(count).fill(0);\n\nconst getDefaultState = () => ({\n  calculatedWall: [4, 10, 0, 0, 1, 6, 0, 7, 4, 3, 9, 0, 4, 7, 0],\n  wall: [4, 10 ,0, 0, 1, 6, 0, 7, 4, 3, 9, 0, 4, 7, 0],\n  water: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  nextLevel: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  grass: 15,\n  blockSize: Constants.BLOCK_SIZE,\n  volumeWater: 0\n});\n\nconst wall = createReducer(getDefaultState(), {\n  [Constants.Wall.CREATE_WALL](state, { wall }) {\n    if (wall) {\n      const blockCount = wall.length;\n      return {\n        ...getDefaultState(),\n        wall,\n        calculatedWall: wall,\n        grass: blockCount,\n        water: fillArray(blockCount),\n        nextLevel: fillArray(blockCount)\n      };\n    }\n    return {\n      ...getDefaultState()\n    };\n  },\n  [Constants.Animation.SET_NO_ANIMATION_MODE](state, { wall }) {\n    return {\n      ...state,\n      calculatedWall: wall,\n      };\n  },\n  [Constants.Grass.ADD_GRASS_BLOCK](state, { count }) {\n    const grass = state.grass + count;\n    let wall = [...state.wall];\n    if (count > 0) {\n      wall = state.wall.concat(fillArray(count));\n    }\n\n    if (count < 0) {\n      const newLength = state.wall.length + count;\n      wall = state.wall.slice(0, newLength);\n    }\n    const blockCount = wall.length;\n    const water = fillArray(blockCount);\n    const nextLevel = fillArray(blockCount);\n\n    return  {\n      ...state,\n      grass,\n      wall,\n      calculatedWall: wall,\n      water,\n      nextLevel,\n      volumeWater: 0\n    };\n  },\n  [Constants.Wall.ADD_WALL_BLOCKS](state, { count, columnIndex }) {\n    const wall = [...state.wall];\n    wall[columnIndex] = state.wall[columnIndex] + count;\n    return {\n      ...state,\n      wall,\n      calculatedWall: wall\n    };\n  },\n  [Constants.Rain.ADD_NEXT_LEVEL](state, { water, nextLevel }) {\n    return {\n      ...state,\n      water,\n      nextLevel\n    };\n  },\n  [Constants.Rain.STOP_RAIN](state) {\n    const blockCount = state.wall.length;\n    const water = fillArray(blockCount);\n    const nextLevel = fillArray(blockCount);\n    return {\n      ...state,\n      water,\n      nextLevel,\n      volumeWater: 0\n    };\n  },\n  [Constants.Wall.CALCULATE_VOLUME_WATER] (state) {\n    const volumeWater = calculateVolumeWater(state.calculatedWall);\n    return {\n      ...state,\n      volumeWater\n    };\n  },\n  [Constants.Animation.UNSET_NO_ANIMATION_MODE]() {\n    return {\n      ...getDefaultState()\n    };\n  }\n});\n\nexport default wall;\n","export const calculateVolumeWater = (wall) => {\n  let max = 0;\n  const leftMax = wall.map(height => {\n    if (height > max) {\n      max = height;\n    }\n    return max;\n  });\n  max = 0;\n  const rightMax = [...wall].reverse().map(height => {\n    if (height > max) {\n      max = height;\n    }\n    return max;\n  })\n  let volume = 0;\n  for (let i = 1; i < wall.length - 1; i++) {\n    volume += Math.min(leftMax[i], rightMax[i]) -wall[i];\n  }\n  return volume;\n}\n","import createReducer from '../config/createReducer';\nimport Constants from '../config/constants';\n\nconst getDefaultState = () => ({\n  dragMode: false,\n  direction: 0, // 1 - to right, -1 - to left\n  startCoordinates: null,\n  columnIndex: -1\n});\n\nconst drag = createReducer(getDefaultState(), {\n  [Constants.Drag.SET_DRAG_MODE](state, { coordinates, direction, columnIndex }) {\n    return {\n      ...state,\n      dragMode: true,\n      direction,\n      columnIndex,\n      startCoordinates: coordinates\n    };\n  },\n  [Constants.Drag.UNSET_DRAG_MODE]() {\n    return {\n      ...getDefaultState()\n    };\n  }\n});\n\nexport default drag;\n","import createReducer from '../config/createReducer';\nimport Constants from '../config/constants';\n\n\nconst getDefaultState = () => ({\n  rainMode: false,\n  noAnimationMode: false\n});\n\nconst rain = createReducer(getDefaultState(), {\n  [Constants.Rain.START_RAIN](state) {\n    return {\n      ...state,\n      rainMode: true,\n    };\n  },\n  [Constants.Rain.STOP_RAIN]() {\n    return {\n      ...getDefaultState()\n    };\n  },\n  [Constants.Animation.SET_NO_ANIMATION_MODE](state) {\n    return {\n      ...state,\n      noAnimationMode: true\n    };\n  },\n  [Constants.Animation.UNSET_NO_ANIMATION_MODE]() {\n    return {\n      ...getDefaultState()\n    };\n  }\n});\n\nexport default rain;\n","import { combineReducers } from 'redux';\nimport { createStore } from 'redux';\n\nimport wall from './wall';\nimport drag from './drag';\nimport rain from './rain';\n\nexport default  createStore(combineReducers({\n wall,\n drag,\n rain\n}));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport { Provider } from 'react-redux'\n// import configureStore from './config/store';\nimport store from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n   <App />\n  </Provider>,\n  document.getElementById('root')\n );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}